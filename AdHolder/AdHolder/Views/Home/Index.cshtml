@model AdHolder.Models.Product
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutDashboard.cshtml";
}
@{
    List<SelectListItem> listItems = new List<SelectListItem>();
    listItems.Add(new SelectListItem
    {
        Text = "Cash On Delivery",
        Value = "1"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Credit Card",
        Value = "2"
    });
    listItems.Add(new SelectListItem
    {
        Text = "Debit Card",
        Value = "3"
    });
}

@{
    List<SelectListItem> listItemForArea = new List<SelectListItem>();
}

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.2.1/jquery.min.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.17.0/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.6/jquery.validate.unobtrusive.min.js"></script>

<script src="https://cdn.jsdelivr.net/npm/jquery-ajax-unobtrusive@3.2.4/jquery.unobtrusive-ajax.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>

<div class="row">

    <!-- Modal -->
    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">New Product Details</h4>
                </div>
                @*@using (Html.BeginForm("AddPaymentInfo", "Business", FormMethod.Post, new { @class = "form-horizontal" }))*@
                @using (Ajax.BeginForm("AddProduct", "Home",
                       new AjaxOptions()
                       {
                           OnSuccess = "onSuccess",
                           HttpMethod = "POST",
                           OnFailure = "onFailure"
                       }, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
                {
                    <div class="modal-body">
                        <div class="form-group">
                            @Html.HiddenFor(h => h.ProductId)
                            @Html.HiddenFor(h => h.Image)
                            <div class="col-sm-4">
                                @Html.LabelFor(l => l.ProductTitle, new { @class = "" })
                                @Html.TextBoxFor(t => t.ProductTitle, new { @class = "form-control", @placeholder = "Product Title" })
                                @Html.ValidationMessageFor(t => t.ProductTitle)
                            </div>
                            <div class="col-sm-4">
                                @Html.LabelFor(l => l.Images, new { @class = "" })
                                @Html.TextBoxFor(m => m.Images, new { id = "Images", type = "file" })
                                <p class="help-block">
                                    Image 500 KB or smaller.
                                </p>
                                @*<div class="col-md-10">
                                        <input type="file" class="btn btn-default" id="Images" multiple="multiple" name="Images">
                                        <p class="help-block">
                                            Select Image...
                                        </p>
                                    </div>*@
                                @Html.ValidationMessageFor(t => t.Images)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-12">
                                @Html.LabelFor(l => l.Description, new { @class = "" })
                                @Html.TextBoxFor(t => t.Description, new { @class = "form-control", @placeholder = "Description" })
                                @Html.ValidationMessageFor(t => t.Description)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-6">
                                @*sr-only*@
                                @Html.LabelFor(l => l.CityId, new { @class = "" })
                                @Html.DropDownListFor(model => model.CityId, (IEnumerable<SelectListItem>)ViewBag.Cities, "Select City", new { @class = "form-control" })
                                @Html.ValidationMessageFor(t => t.CityId)
                            </div>
                            <div class="col-sm-6">
                                @Html.LabelFor(l => l.AreaId, new { @class = "" })
                                @Html.DropDownListFor(model => model.AreaId, listItemForArea, "Select Area", new { @class = "form-control" })
                                @Html.ValidationMessageFor(t => t.AreaId)
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-6">
                                @Html.LabelFor(l => l.FarePerDay, new { @class = "" })
                                @Html.TextBoxFor(t => t.FarePerDay, new { @class = "form-control", @placeholder = "Fare Per Day" })
                                @Html.ValidationMessageFor(t => t.FarePerDay)
                            </div>
                            <div class="col-sm-6">
                                @Html.LabelFor(l => l.PaymentOption, new { @class = "" })
                                @Html.DropDownListFor(model => model.PaymentOption, listItems, "Select Payment Status", new { @class = "form-control" })
                                @Html.ValidationMessageFor(t => t.PaymentOption)
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <input type="button" class="btn btn-primary" id="submit-form" value="Save Product" />
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    </div>
                }
            </div>

        </div>
    </div>
    <!-- Modal -->

    <div class="modal fade" id="deleteModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title" id="exampleModalLabel">Delete Payment Details</h4>
                </div>
                @using (Ajax.BeginForm("DeleteProductInfo", "Business",
                       new AjaxOptions()
                       {
                           OnSuccess = "onSuccessDelete",
                           HttpMethod = "POST",
                           OnFailure = "onFailureDelete"
                       }, new { @class = "form-horizontal" }))
                {

                    <div class="modal-body">
                        @Html.HiddenFor(h => h.ProductId)
                        Are you sure you want to delete?
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        <input type="submit" class="btn btn-primary" value="Delete" />
                    </div>
                }
            </div>
        </div>
    </div>


    @* Modal End *@

    <div class="col-md-8">
        <div class="panel-heading">
            <!-- Trigger the modal with a button -->
            <br />
            <div class="panel-title">
                <button type="button" id="create-product" class="btn btn-primary" data-toggle="modal">Add Product</button>
            </div>
        </div>
        <div class="panel-body">
            <table id="example" class="table table-striped table-bordered dt-responsive nowrap" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>Product Id</th>
                        <th>Product Title</th>
                        <th>Description</th>
                        <th>Image</th>
                        <th>Fare Per Day</th>
                        <th>Payment Option</th>
                        <th>Area Name</th>
                        <th>Edit</th>
                        <th>Delete</th>
                    </tr>
                </thead>
            </table>
        </div>
    </div>
</div>

<link href="https://cdn.datatables.net/1.10.15/css/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/responsive/2.1.1/css/responsive.bootstrap.min.css" rel="stylesheet" />
<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />

<link href="https://cdn.datatables.net/1.10.16/css/jquery.dataTables.min.css" rel="stylesheet" />
<link href="https://cdn.datatables.net/buttons/1.4.2/css/buttons.dataTables.min.css" rel="stylesheet" />

<script src="https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>
<script src="https://cdn.datatables.net/1.10.15/js/dataTables.bootstrap4.min.js "></script>
<script src="https://cdn.datatables.net/buttons/1.4.2/js/dataTables.buttons.min.js"></script>

<script src="https://cdn.datatables.net/buttons/1.4.2/js/buttons.flash.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.32/pdfmake.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.32/vfs_fonts.js"></script>
<script src="https://cdn.datatables.net/buttons/1.4.2/js/buttons.html5.min.js"></script>

<script src="https://cdn.datatables.net/buttons/1.4.2/js/buttons.print.min.js"></script>
<script src="https://cdn.datatables.net/select/1.2.3/js/dataTables.select.min.js"></script>

<script type="text/javascript">

    $('#example').dataTable({

        "processing": true, // for show progress bar
        "serverSide": false, // for process server side
        "filter": true, // this is for disable filter (search box)
        "orderMulti": false, // for disable multiple column at once
        "ajax": {
            "url": "@Url.Action("GetProducts", "Home")",
            "type": "POST",
            "datatype": "json"
        },
        "columns": [
            { "data": "ProductId", "name": "ProductId", "autoWidth": true },
            { "data": "ProductTitle", "name": "ProductTitle", "autoWidth": true },
            { "data": "Description", "name": "Description", "autoWidth": true },
            { "data": "Image", "name": "Image", "autoWidth": true },
            { "data": "FarePerDay", "name": "FarePerDay", "autoWidth": true },
            { "data": "PaymentOption", "name": "PaymentOption", "autoWidth": true },
            { "data": "AreaName", "name": "AreaName", "autoWidth": true },
                {
                    data: null, render: function (data, type, row) {
                        return '<button class="btn btn-info" onclick="EditData(' + row.ProductId + ', \'' +
                                                                                    row.ProductTitle + '\', \'' +
                                                                                    row.Description + '\', \'' +
                                                                                    row.Image + '\', \'' +
                                                                                    row.FarePerDay + '\', \'' +
                                                                                    row.PaymentOption + '\', \'' +
                                                                                    row.City + '\', \'' +
                                                                                    row.AreaName + '\'' + ')">Edit</button>';
                    }
                },
                {
                    data: null, render: function (data, type, row) {
                        return "<a href='#' class='btn btn-danger' onclick=DeleteData('" + row.ProductId + "'); >Delete</a>";
                    }
                },
        ]
    });

    $('#submit-form').click(function () {

        $('#form0').submit();
    });

    $('#Images').change(function () {

        $("#Image").val($(this).val());
    });
    $('#create-product').click(function () {
        $('#form0')[0].reset();
        $('#myModal .modal-title').html('New Product Details');
        $('#myModal .btn-primary').html('Save Product');

        //Show Modal
        $('#myModal').modal('show');

    });

    $('#CityId').change(function () {
        $('#AreaId option').each(function () {
            $(this).remove();
        });
        $.ajax({
            url: '@Url.Action("GetArea", "Home")',
            dataType: "json",
            type: "POST",
            data: JSON.stringify({ 'cityId': $('#CityId').val() }),
            contentType: 'application/json; charset=utf-8',
            async: true,
            processData: false,
            cache: false,
            success: function (data) {

                $('#AreaId')
                    .append($("<option></option>")
                        .attr("value", "")
                        .text("Select Area"));
                $.each(data, function (key, data) {
                    $('#AreaId')
                        .append($("<option></option>")
                            .attr("value", data.Value)
                            .text(data.Text));
                });

            },
            error: function (xhr) {
                console.log('Error occur at BindAreaList()');
            }
        });
    });

    function onSuccess(data) {
        if (data == "success") {
            alert("Successfully Saved.");
            //Show Modal
            $('#myModal').modal('hide');
            $('#example').DataTable().ajax.reload();
        }
        else if (data == "error") {
            alert("Error");
        }
    }
    function onError(data) {
        alert("Error");
    }

    function EditData(id, title, description, image, farePerDay, paymentOption, city, areaName) {

        console.log(id, description, image, farePerDay, paymentOption, city, areaName);
        $('#myModal .modal-title').html('Update Payment Details');
        $('#myModal .btn-primary').html('Update');

        //Bind values
        $('#myModal #ProductId').val(id);
        $('#myModal #ProductTitle').val(title);
        $('#myModal #Description').val(description);
        $('#myModal #Image').val(image);
        $('#myModal #FarePerDay').val(farePerDay);
        $('#myModal #PaymentOption').val(paymentOption);
        //$('#myModel #City').text(city);
        $("#myModel #CityId option:contains(" + city + ")").attr('selected', 'selected');
        $("#myModal #AreaId option:contains(" + areaName + ")").attr('selected', 'selected');

        //$('#myModal #AreaName').text(areaName);

        //Show Modal
        $('#myModal').modal('show');
    }
    function DeleteData(ProduceId) {
        //Bind values
        $('#deleteModal #ProductId').val(ProduceId);

        //Show Modal
        $('#deleteModal').modal('show');
    }

    $('#ProductTitle').keypress(function (e) {

        var txt = String.fromCharCode(e.which);
        console.log(txt + ' : ' + e.which);
        if (!txt.match(/[A-Za-z0-9]/))
        {
            return false;
        }
    });

    var _URL = window.URL || window.webkitURL;

    $("#Images").change(function (e) {
        var file, img;

        if ((file = this.files[0])) {
            img = new Image();
            img.onload = function () {
                var size = bytesToSize(file.size);
                var sizeArray = size.split(' ');
                if (sizeArray[1] == 'KB') {
                    if (sizeArray[0] < 500) {
                        return true;
                    }
                    else {
                        $("#Images").val('');
                        alert('Size is too large, please select proper image.');
                    }
                }
                else {
                    $("#Images").val('');
                    alert('Size is too large, please select proper image.');
                }
            };
            img.onerror = function () {
                alert("not a valid file: " + file.type);
                $("#Images").val('');
            };
            img.src = _URL.createObjectURL(file);
        }
    });

    function bytesToSize(bytes) {
        var sizes = ['Bytes', 'KB', 'MB', 'GB', 'TB'];
        if (bytes == 0) return '0 Byte';
        var i = parseInt(Math.floor(Math.log(bytes) / Math.log(1024)));
        return Math.round(bytes / Math.pow(1024, i), 2) + ' ' + sizes[i];
    };
</script>
